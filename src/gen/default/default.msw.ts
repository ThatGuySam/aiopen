/* eslint-disable ts/explicit-function-return-type */

import type {
    AdminApiKey,
    AdminApiKeysDelete200,
    ApiKeyList,
} from '.././models'
/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 * OpenAPI spec version: 2.3.0
 */
import {
    faker,
} from '@faker-js/faker'
import {
    delay,
    http,
    HttpResponse,
} from 'msw'

export const getAdminApiKeysListResponseMock = (overrideResponse: Partial< ApiKeyList > = {}): ApiKeyList => ({ object: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), data: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), name: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), redacted_value: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), value: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), created_at: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), owner: faker.helpers.arrayElement([{ type: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), name: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), created_at: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), role: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]) })), undefined]), has_more: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), first_id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), last_id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), ...overrideResponse })

export const getAdminApiKeysCreateResponseMock = (overrideResponse: Partial< AdminApiKey > = {}): AdminApiKey => ({ object: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), name: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), redacted_value: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), value: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), created_at: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), owner: faker.helpers.arrayElement([{ type: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), name: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), created_at: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), role: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), ...overrideResponse })

export const getAdminApiKeysGetResponseMock = (overrideResponse: Partial< AdminApiKey > = {}): AdminApiKey => ({ object: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), name: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), redacted_value: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), value: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), created_at: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), owner: faker.helpers.arrayElement([{ type: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), name: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), created_at: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), role: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), ...overrideResponse })

export const getAdminApiKeysDeleteResponseMock = (overrideResponse: Partial< AdminApiKeysDelete200 > = {}): AdminApiKeysDelete200 => ({ id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), object: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), deleted: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), ...overrideResponse })

export function getAdminApiKeysListMockHandler(overrideResponse?: ApiKeyList | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<ApiKeyList> | ApiKeyList)) {
    return http.get('*/organization/admin_api_keys', async (info) => {
        await delay(1000)

        return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
            : getAdminApiKeysListResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
        })
    })
}

export function getAdminApiKeysCreateMockHandler(overrideResponse?: AdminApiKey | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<AdminApiKey> | AdminApiKey)) {
    return http.post('*/organization/admin_api_keys', async (info) => {
        await delay(1000)

        return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
            : getAdminApiKeysCreateResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
        })
    })
}

export function getAdminApiKeysGetMockHandler(overrideResponse?: AdminApiKey | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<AdminApiKey> | AdminApiKey)) {
    return http.get('*/organization/admin_api_keys/:keyId', async (info) => {
        await delay(1000)

        return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
            : getAdminApiKeysGetResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
        })
    })
}

export function getAdminApiKeysDeleteMockHandler(overrideResponse?: AdminApiKeysDelete200 | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<AdminApiKeysDelete200> | AdminApiKeysDelete200)) {
    return http.delete('*/organization/admin_api_keys/:keyId', async (info) => {
        await delay(1000)

        return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
            : getAdminApiKeysDeleteResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
        })
    })
}
export function getDefaultMock() {
    return [
        getAdminApiKeysListMockHandler(),
        getAdminApiKeysCreateMockHandler(),
        getAdminApiKeysGetMockHandler(),
        getAdminApiKeysDeleteMockHandler(),
    ]
}
