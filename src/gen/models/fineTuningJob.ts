/* eslint-disable jsdoc/check-alignment */

import type { FineTuneMethod } from './fineTuneMethod'
import type { FineTuningIntegration } from './fineTuningIntegration'
/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 * OpenAPI spec version: 2.3.0
 */
import type { FineTuningJobError } from './fineTuningJobError'
import type { FineTuningJobHyperparameters } from './fineTuningJobHyperparameters'
import type { FineTuningJobObject } from './fineTuningJobObject'
import type { FineTuningJobStatus } from './fineTuningJobStatus'

/**
 * The `fine_tuning.job` object represents a fine-tuning job that has been created through the API.

 */
export interface FineTuningJob {
  /** The object identifier, which can be referenced in the API endpoints. */
  id: string
  /** The Unix timestamp (in seconds) for when the fine-tuning job was created. */
  created_at: number
  /**
   * For fine-tuning jobs that have `failed`, this will contain more information on the cause of the failure.
   * @nullable
   */
  error: FineTuningJobError
  /**
   * The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
   * @nullable
   */
  fine_tuned_model: string | null
  /**
   * The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
   * @nullable
   */
  finished_at: number | null
  /** The hyperparameters used for the fine-tuning job. This value will only be returned when running `supervised` jobs. */
  hyperparameters: FineTuningJobHyperparameters
  /** The base model that is being fine-tuned. */
  model: string
  /** The object type, which is always "fine_tuning.job". */
  object: FineTuningJobObject
  /** The organization that owns the fine-tuning job. */
  organization_id: string
  /** The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents). */
  result_files: string[]
  /** The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`. */
  status: FineTuningJobStatus
  /**
   * The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
   * @nullable
   */
  trained_tokens: number | null
  /** The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents). */
  training_file: string
  /**
   * The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).
   * @nullable
   */
  validation_file: string | null
  /**
   * A list of integrations to enable for this fine-tuning job.
   * @maxItems 5
   * @nullable
   */
  integrations?: FineTuningIntegration[] | null
  /** The seed used for the fine-tuning job. */
  seed: number
  /**
   * The Unix timestamp (in seconds) for when the fine-tuning job is estimated to finish. The value will be null if the fine-tuning job is not running.
   * @nullable
   */
  estimated_finish?: number | null
  method?: FineTuneMethod
}
