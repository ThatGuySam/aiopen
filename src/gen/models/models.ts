/* eslint-disable ts/explicit-function-return-type */

import type {
    AxiosRequestConfig,
    AxiosResponse,
} from 'axios'
import type {
    DeleteModelResponse,
    ListModelsResponse,
    Model,
} from '.././models'
/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 * OpenAPI spec version: 2.3.0
 */
import axios from 'axios'

export function getModels() {
/**
 * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.
 */
    const listModels = <TData = AxiosResponse<ListModelsResponse>>(
        options?: AxiosRequestConfig,
    ): Promise<TData> => {
        return axios.get(
            `http://localhost:3000/v1/models`,
            options,
        )
    }
    /**
     * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
     */
    const retrieveModel = <TData = AxiosResponse<Model>>(
        model: string,
        options?: AxiosRequestConfig,
    ): Promise<TData> => {
        return axios.get(
            `http://localhost:3000/v1/models/${model}`,
            options,
        )
    }
    /**
     * @summary Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
     */
    const deleteModel = <TData = AxiosResponse<DeleteModelResponse>>(
        model: string,
        options?: AxiosRequestConfig,
    ): Promise<TData> => {
        return axios.delete(
            `http://localhost:3000/v1/models/${model}`,
            options,
        )
    }
    return {
        listModels,
        retrieveModel,
        deleteModel,
    }
}
export type ListModelsResult = AxiosResponse<ListModelsResponse>
export type RetrieveModelResult = AxiosResponse<Model>
export type DeleteModelResult = AxiosResponse<DeleteModelResponse>
