/* eslint-disable ts/explicit-function-return-type */

import type {
  CostsResult,
  UsageAudioSpeechesResult,
  UsageAudioTranscriptionsResult,
  UsageCodeInterpreterSessionsResult,
  UsageCompletionsResult,
  UsageEmbeddingsResult,
  UsageImagesResult,
  UsageModerationsResult,
  UsageResponse,
  UsageVectorStoresResult,
} from '.././models'
/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 * OpenAPI spec version: 2.3.0
 */
import {
  faker,
} from '@faker-js/faker'
import {
  delay,
  http,
  HttpResponse,
} from 'msw'

export const getUsageCostsResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCostsResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageCostsResponseUsageCompletionsResultMock() }, { ...getUsageCostsResponseUsageEmbeddingsResultMock() }, { ...getUsageCostsResponseUsageModerationsResultMock() }, { ...getUsageCostsResponseUsageImagesResultMock() }, { ...getUsageCostsResponseUsageAudioSpeechesResultMock() }, { ...getUsageCostsResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageCostsResponseUsageVectorStoresResultMock() }, { ...getUsageCostsResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageCostsResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioSpeechesResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageAudioSpeechesResponseUsageCompletionsResultMock() }, { ...getUsageAudioSpeechesResponseUsageEmbeddingsResultMock() }, { ...getUsageAudioSpeechesResponseUsageModerationsResultMock() }, { ...getUsageAudioSpeechesResponseUsageImagesResultMock() }, { ...getUsageAudioSpeechesResponseUsageAudioSpeechesResultMock() }, { ...getUsageAudioSpeechesResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageAudioSpeechesResponseUsageVectorStoresResultMock() }, { ...getUsageAudioSpeechesResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageAudioSpeechesResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageAudioTranscriptionsResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageAudioTranscriptionsResponseUsageCompletionsResultMock() }, { ...getUsageAudioTranscriptionsResponseUsageEmbeddingsResultMock() }, { ...getUsageAudioTranscriptionsResponseUsageModerationsResultMock() }, { ...getUsageAudioTranscriptionsResponseUsageImagesResultMock() }, { ...getUsageAudioTranscriptionsResponseUsageAudioSpeechesResultMock() }, { ...getUsageAudioTranscriptionsResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageAudioTranscriptionsResponseUsageVectorStoresResultMock() }, { ...getUsageAudioTranscriptionsResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageAudioTranscriptionsResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCodeInterpreterSessionsResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageCodeInterpreterSessionsResponseUsageCompletionsResultMock() }, { ...getUsageCodeInterpreterSessionsResponseUsageEmbeddingsResultMock() }, { ...getUsageCodeInterpreterSessionsResponseUsageModerationsResultMock() }, { ...getUsageCodeInterpreterSessionsResponseUsageImagesResultMock() }, { ...getUsageCodeInterpreterSessionsResponseUsageAudioSpeechesResultMock() }, { ...getUsageCodeInterpreterSessionsResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageCodeInterpreterSessionsResponseUsageVectorStoresResultMock() }, { ...getUsageCodeInterpreterSessionsResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageCodeInterpreterSessionsResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageCompletionsResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageCompletionsResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageCompletionsResponseUsageCompletionsResultMock() }, { ...getUsageCompletionsResponseUsageEmbeddingsResultMock() }, { ...getUsageCompletionsResponseUsageModerationsResultMock() }, { ...getUsageCompletionsResponseUsageImagesResultMock() }, { ...getUsageCompletionsResponseUsageAudioSpeechesResultMock() }, { ...getUsageCompletionsResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageCompletionsResponseUsageVectorStoresResultMock() }, { ...getUsageCompletionsResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageCompletionsResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageEmbeddingsResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageEmbeddingsResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageEmbeddingsResponseUsageCompletionsResultMock() }, { ...getUsageEmbeddingsResponseUsageEmbeddingsResultMock() }, { ...getUsageEmbeddingsResponseUsageModerationsResultMock() }, { ...getUsageEmbeddingsResponseUsageImagesResultMock() }, { ...getUsageEmbeddingsResponseUsageAudioSpeechesResultMock() }, { ...getUsageEmbeddingsResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageEmbeddingsResponseUsageVectorStoresResultMock() }, { ...getUsageEmbeddingsResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageEmbeddingsResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageImagesResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageImagesResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageImagesResponseUsageCompletionsResultMock() }, { ...getUsageImagesResponseUsageEmbeddingsResultMock() }, { ...getUsageImagesResponseUsageModerationsResultMock() }, { ...getUsageImagesResponseUsageImagesResultMock() }, { ...getUsageImagesResponseUsageAudioSpeechesResultMock() }, { ...getUsageImagesResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageImagesResponseUsageVectorStoresResultMock() }, { ...getUsageImagesResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageImagesResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageModerationsResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageModerationsResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageModerationsResponseUsageCompletionsResultMock() }, { ...getUsageModerationsResponseUsageEmbeddingsResultMock() }, { ...getUsageModerationsResponseUsageModerationsResultMock() }, { ...getUsageModerationsResponseUsageImagesResultMock() }, { ...getUsageModerationsResponseUsageAudioSpeechesResultMock() }, { ...getUsageModerationsResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageModerationsResponseUsageVectorStoresResultMock() }, { ...getUsageModerationsResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageModerationsResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export const getUsageVectorStoresResponseUsageCompletionsResultMock = (overrideResponse: Partial<UsageCompletionsResult> = {}): UsageCompletionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.completions.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), input_cached_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_tokens: faker.number.int({ min: undefined, max: undefined }), input_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), output_audio_tokens: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), batch: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseUsageEmbeddingsResultMock = (overrideResponse: Partial<UsageEmbeddingsResult> = {}): UsageEmbeddingsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.embeddings.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseUsageModerationsResultMock = (overrideResponse: Partial<UsageModerationsResult> = {}): UsageModerationsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.moderations.result'] as const), input_tokens: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseUsageImagesResultMock = (overrideResponse: Partial<UsageImagesResult> = {}): UsageImagesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.images.result'] as const), images: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), source: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), size: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseUsageAudioSpeechesResultMock = (overrideResponse: Partial<UsageAudioSpeechesResult> = {}): UsageAudioSpeechesResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_speeches.result'] as const), characters: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseUsageAudioTranscriptionsResultMock = (overrideResponse: Partial<UsageAudioTranscriptionsResult> = {}): UsageAudioTranscriptionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.audio_transcriptions.result'] as const), seconds: faker.number.int({ min: undefined, max: undefined }), num_model_requests: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), user_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), api_key_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), model: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseUsageVectorStoresResultMock = (overrideResponse: Partial<UsageVectorStoresResult> = {}): UsageVectorStoresResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.vector_stores.result'] as const), usage_bytes: faker.number.int({ min: undefined, max: undefined }), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseUsageCodeInterpreterSessionsResultMock = (overrideResponse: Partial<UsageCodeInterpreterSessionsResult> = {}): UsageCodeInterpreterSessionsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.usage.code_interpreter_sessions.result'] as const), num_sessions: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseCostsResultMock = (overrideResponse: Partial<CostsResult> = {}): CostsResult => ({ ...{ object: faker.helpers.arrayElement(['organization.costs.result'] as const), amount: faker.helpers.arrayElement([{ value: faker.helpers.arrayElement([faker.number.int({ min: undefined, max: undefined }), undefined]), currency: faker.helpers.arrayElement([faker.string.alpha(20), undefined]) }, undefined]), line_item: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]), project_id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.string.alpha(20), null]), undefined]) }, ...overrideResponse })

export const getUsageVectorStoresResponseMock = (overrideResponse: Partial< UsageResponse > = {}): UsageResponse => ({ object: faker.helpers.arrayElement(['page'] as const), data: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({ object: faker.helpers.arrayElement(['bucket'] as const), start_time: faker.number.int({ min: undefined, max: undefined }), end_time: faker.number.int({ min: undefined, max: undefined }), result: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.helpers.arrayElement([{ ...getUsageVectorStoresResponseUsageCompletionsResultMock() }, { ...getUsageVectorStoresResponseUsageEmbeddingsResultMock() }, { ...getUsageVectorStoresResponseUsageModerationsResultMock() }, { ...getUsageVectorStoresResponseUsageImagesResultMock() }, { ...getUsageVectorStoresResponseUsageAudioSpeechesResultMock() }, { ...getUsageVectorStoresResponseUsageAudioTranscriptionsResultMock() }, { ...getUsageVectorStoresResponseUsageVectorStoresResultMock() }, { ...getUsageVectorStoresResponseUsageCodeInterpreterSessionsResultMock() }, { ...getUsageVectorStoresResponseCostsResultMock() }]))) })), has_more: faker.datatype.boolean(), next_page: faker.string.alpha(20), ...overrideResponse })

export function getUsageCostsMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/costs', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageCostsResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageAudioSpeechesMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/audio_speeches', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageAudioSpeechesResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageAudioTranscriptionsMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/audio_transcriptions', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageAudioTranscriptionsResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageCodeInterpreterSessionsMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/code_interpreter_sessions', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageCodeInterpreterSessionsResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageCompletionsMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/completions', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageCompletionsResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageEmbeddingsMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/embeddings', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageEmbeddingsResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageImagesMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/images', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageImagesResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageModerationsMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/moderations', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageModerationsResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}

export function getUsageVectorStoresMockHandler(overrideResponse?: UsageResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<UsageResponse> | UsageResponse)) {
  return http.get('*/organization/usage/vector_stores', async (info) => {
    await delay(1000)

    return new HttpResponse(JSON.stringify(overrideResponse !== undefined
      ? (typeof overrideResponse === 'function' ? await overrideResponse(info) : overrideResponse)
      : getUsageVectorStoresResponseMock()), { status: 200, headers: { 'Content-Type': 'application/json' },
    })
  })
}
export function getUsageMock() {
  return [
    getUsageCostsMockHandler(),
    getUsageAudioSpeechesMockHandler(),
    getUsageAudioTranscriptionsMockHandler(),
    getUsageCodeInterpreterSessionsMockHandler(),
    getUsageCompletionsMockHandler(),
    getUsageEmbeddingsMockHandler(),
    getUsageImagesMockHandler(),
    getUsageModerationsMockHandler(),
    getUsageVectorStoresMockHandler(),
  ]
}
